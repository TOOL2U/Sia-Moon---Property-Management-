rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Users can read and write their own properties
    match /properties/{propertyId} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == resource.data.ownerId ||
         request.auth.uid == request.resource.data.ownerId);
    }

    // Users can read and write their own bookings
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == resource.data.userId ||
         request.auth.uid == request.resource.data.userId);
    }

    // Users can read and write their own tasks
    match /tasks/{taskId} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == resource.data.assignedTo ||
         request.auth.uid == request.resource.data.assignedTo ||
         request.auth.uid == resource.data.createdBy ||
         request.auth.uid == request.resource.data.createdBy);
    }

    // Users can read and write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == resource.data.userId ||
         request.auth.uid == request.resource.data.userId);
    }

    // Allow authenticated users to read and write their own data
    // This is a fallback rule for development - should be more restrictive in production
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
